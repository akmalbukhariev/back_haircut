<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.barbie.haircut.api.hairdresser.service.HairdresserMapper">

    <select id="selectHairdresser" resultType="camelMap">
        <![CDATA[
            SELECT *
            FROM hairdresser_info where phone = #{phone}
        ]]>
    </select>

    <select id="selectHairdresserService" resultType="camelMap">
        <![CDATA[
            SELECT * FROM services
               WHERE hairdresser_no = (
                SELECT no FROM hairdresser_info
                 WHERE phone = #{phone}
                )
        ]]>
    </select>

    <select id="selectAllHairdresserForUserMainPage" resultType="camelMap">
    <![CDATA[
            select
                  t1.no, t1.name, t1.surname, t1.phone, t1.address, t1.storeImage, t1.profession,
                  GROUP_CONCAT(t2.services) AS services,
                  (t3.score1 + t3.score2 + t3.score3 + t3.score4 + t3.score5) AS all_scores
            from
                hairdresser_info t1
            inner join
                services t2 on t1.no = t2.hairdresser_no
            inner join
                scores t3 on t1.no = t3.hairdresser_no
            group by
                t1.phone
        ]]>
    </select>

    <select id="selectHairdresserDetailInfo" resultType="camelMap">
        <![CDATA[
            select
                t1.no, t1.name, t1.surname, t1.phone, t1.workingHour, t1.address, t1.storeImage, t1.profession,
                JSON_ARRAYAGG(JSON_OBJECT('no',t2.no, 'name', t2.services, 'price', t2.price, 'color', t2.color)) AS services,
                CONCAT_WS(',', t3.score1, t3.score2, t3.score3, t3.score4, t3.score5) AS scores,
                (t3.score1 + t3.score2 + t3.score3 + t3.score4 + t3.score5) AS all_scores,
                (t3.score1 + t3.score2 * 2 + t3.score3 * 3 + t3.score4 * 4 + t3.score5 * 5) / (t3.score1 + t3.score2 + t3.score3
                + t3.score4 + t3.score5) AS average_scores
            from
               hairdresser_info t1
            inner join
               services t2 on t1.no = t2.hairdresser_no
            inner join
               scores t3 on t1.no = t3.hairdresser_no
            where
               t1.phone = #{phone}
            group by
                t1.phone
        ]]>
    </select>

    <insert id="insertBookedClient">
        <![CDATA[
           INSERT INTO hairdresser_booked_clients (hairdresser_no, client_no, service, date)
            select
               t2.no,
               t1.no,
               #{services},
               #{date}
            from
               user_info t1
            inner join
               hairdresser_info t2
            where
               t1.phone = #{userPhone}
            and
               t2.phone = #{hairdresserPhone}
        ]]>
    </insert>

    <insert id="insertHairdresserBookedClient">
        <![CDATA[
            INSERT INTO hairdresser_booked_client_himself (hairdresser_no, client_phone, client_name, service, date, note)
            SELECT
              t1.no,
              #{client_phone},
              #{client_name},
              #{service},
              #{date},
              #{note}
            FROM
              hairdresser_info t1
            WHERE
              t1.phone = #{hairdresser_phone}
        ]]>
    </insert>

    <insert id="insertHairdresser">
        <![CDATA[
           INSERT INTO hairdresser_info
            (
                 name
                ,surname
                ,phone
                ,location
            )
            VALUES
            (
                #{name}
                ,#{surName}
                ,#{phone}
                ,#{location}
            )
        ]]>
    </insert>

    <select id="selectBookedClients" resultType="camelMap">
        <![CDATA[
            SELECT
                t3.name,
                t3.surname,
                t3.phone,
                GROUP_CONCAT(t4.services SEPARATOR ',') AS services,
                GROUP_CONCAT(t4.color SEPARATOR ',') AS colors,
                t2.date
            FROM
                hairdresser_info t1
            INNER JOIN
                hairdresser_booked_clients t2 ON t1.no = t2.hairdresser_no
            INNER JOIN
                user_info t3 ON t2.client_no = t3.no
            INNER JOIN
                services t4 ON FIND_IN_SET(t4.no, t2.service)
            WHERE
                t1.phone = #{phone}
            AND SUBSTRING_INDEX(SUBSTRING_INDEX(t2.date, '/', 1), ' ', -1) = #{date}
            GROUP BY
                t1.no, t1.name, t1.surname, t3.phone, t2.date;
        ]]>
    </select>

    <select id="selectBookedClientsHimself" resultType="camelMap">
        <![CDATA[
            SELECT t1.client_name as name,
                   '' as surname,
                   t1.client_phone as phone,
                   GROUP_CONCAT(t2.services SEPARATOR ',') AS services,
                   GROUP_CONCAT(t2.color SEPARATOR ',') AS colors,
                   t1.date
             FROM
                hairdresser_booked_client_himself t1
             INNER JOIN
                services t2 ON FIND_IN_SET(t2.no, t1.service)
             WHERE t1.hairdresser_no = (select no from hairdresser_info where phone = #{phone})
             AND SUBSTRING_INDEX(SUBSTRING_INDEX(t1.date, '/', 1), ' ', -1) = #{date}
             GROUP BY
                t1.no, t1.client_name, t1.client_phone, t1.date
        ]]>
    </select>

    <update id="updateHairdresserInfo">
        UPDATE hairdresser_info
            <trim prefix="SET" suffixOverrides=",">
                <if test="name != null and name != ''">
                    name=#{name},
                </if>
                <if test="surname != null and surname != ''">
                    surname = #{surname},
                </if>
                <if test="profession != null and profession != ''">
                    profession = #{profession},
                </if>
                <if test="phone != null and phone != ''">
                    phone = #{phone},
                </if>
                <if test="address != null and address != ''">
                    address = #{address},
                </if>
                <if test="location != null and location != ''">
                    location = #{location},
                </if>
                <if test="workingHour != null and workingHour != ''">
                    workingHour = #{workingHour},
                </if>
                <if test="language != null and language != ''">
                    language = #{language},
                </if>
                <if test="notification != null and notification != ''">
                    notification = #{notification}
                </if>
            </trim>
        WHERE phone = #{phone}
    </update>

</mapper>